from telegram import Update, ReplyKeyboardMarkup, InputFile
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# ==== –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ====
BOT_TOKEN = "8143693954:AAE6ayEdS1xZ8BeZ-pz43Ivm1NKSOTK8QSM"
ADMIN_ID = 1345239767
 # üîπ –ó–∞–ºi–Ω–∏ –Ω–∞ —Å–≤—ñ–π Telegram ID

# ==== –°–¢–ê–ù–ò ====
CONSULT_NAME, CONSULT_PHONE = range(2)
BUY_AREA, BUY_REGION, BUY_BUDGET = range(2, 5)

# ==== –ú–ï–ù–Æ ====
main_menu = ReplyKeyboardMarkup([
    ["üìù –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é"],
    ["üè° –ó–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–∏–¥–±–∞–Ω–Ω—è –¢–∞—É–Ω—Ö–∞—É—Å–∞"],
    ["üì¶ –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—é"],
    ["üì¢ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", "‚ÑπÔ∏è –ü—Ä–æ –∫–æ–º–ø–∞–Ω—ñ—é"]
], resize_keyboard=True)

# ==== /START ====
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–í—ñ—Ç–∞—é! –Ø –±–æ—Ç –∫–æ–º–ø–∞–Ω—ñ—ó –∑ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ –≤ –û–¥–µ—Å—ñ üè°\n\n–û–±–µ—Ä–∏ –¥—ñ—é –Ω–∏–∂—á–µ:",
        reply_markup=main_menu
    )

# ==== –ó–ê–Ø–í–ö–ê –ù–ê –ö–û–ù–°–£–õ–¨–¢–ê–¶–Ü–Æ ====
async def consult_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–Ø–∫ –≤–∞—Å –∑–≤–∞—Ç–∏?")
    return CONSULT_NAME

async def consult_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")
    return CONSULT_PHONE

async def consult_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["phone"] = update.message.text
    await update.message.reply_text("–î—è–∫—É—î–º–æ! –ó–∞—è–≤–∫—É –ø—Ä–∏–π–Ω—è—Ç–æ. –ú–∏ –∑ –≤–∞–º–∏ –∑–≤‚Äô—è–∂–µ–º–æ—Å—å üìû")

    msg = (
        "üì• –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é:\n"
        f"üë§ –Ü–º‚Äô—è: {context.user_data['name']}\n"
        f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data['phone']}"
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=msg)
    return ConversationHandler.END

# ==== –ó–ê–Ø–í–ö–ê –ù–ê –¢–ê–£–ù–•–ê–£–° ====
async def buy_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–∫–∞–∂—ñ—Ç—å –±–∞–∂–∞–Ω—É –ø–ª–æ—â—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 80-120 –º¬≤):")
    return BUY_AREA

async def buy_area(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["area"] = update.message.text
    await update.message.reply_text("–í —è–∫–æ–º—É —Ä–∞–π–æ–Ω—ñ –û–¥–µ—Å–∏ –±–∞–∂–∞—î—Ç–µ –∂–∏—Ç–ª–æ?")
    return BUY_REGION

async def buy_region(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["region"] = update.message.text
    await update.message.reply_text("–Ø–∫–∏–π –±—é–¥–∂–µ—Ç –Ω–∞ –ø–æ–∫—É–ø–∫—É? (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 60000-90000 $)")
    return BUY_BUDGET

async def buy_budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["budget"] = update.message.text
    await update.message.reply_text("–î—è–∫—É—î–º–æ! –ú–∏ –ø—ñ–¥–±–µ—Ä–µ–º–æ –¥–ª—è –≤–∞—Å –Ω–∞–π–∫—Ä–∞—â—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ üèòÔ∏è")

    msg = (
        "üè° –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–∏–¥–±–∞–Ω–Ω—è –¢–∞—É–Ω—Ö–∞—É—Å–∞:\n"
        f"üìê –ü–ª–æ—â–∞: {context.user_data['area']}\n"
        f"üìç –†–∞–π–æ–Ω: {context.user_data['region']}\n"
        f"üí∞ –ë—é–¥–∂–µ—Ç: {context.user_data['budget']}"
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=msg)
    return ConversationHandler.END

# ==== –í–Ü–ó–£–ê–õ–Ü–ó–ê–¶–Ü–Ø ====
async def send_visual(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        with open("data/visual.jpg", "rb") as photo:
            await update.message.reply_photo(photo, caption="–û—Å—å –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç–∞ üì∑")
    except FileNotFoundError:
        await update.message.reply_text("–§–∞–π–ª –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó —â–µ –Ω–µ –¥–æ–¥–∞–Ω–æ.")

# ==== –ö–ê–ù–ê–õ ====
async def go_to_channel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü–µ—Ä–µ—Ö–æ–¥—å —É –Ω–∞—à –∫–∞–Ω–∞–ª üëâ https://t.me/—Ç–≤—ñ–π_–∫–∞–Ω–∞–ª")

# ==== –ü–†–û –ö–û–ú–ü–ê–ù–Ü–Æ ====
async def about_company(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üèó –ù–∞—à–∞ –∫–æ–º–ø–∞–Ω—ñ—è –∑–∞–π–º–∞—î—Ç—å—Å—è –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ–º —Ç–∞ –ø—Ä–æ–¥–∞–∂–µ–º —è–∫—ñ—Å–Ω–æ—ó –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ –≤ –û–¥–µ—Å—ñ.\n"
        "‚úÖ –ë—ñ–ª—å—à–µ 10 —Ä–æ–∫—ñ–≤ –Ω–∞ —Ä–∏–Ω–∫—É\n"
        "üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞\n"
        "üåê –°–∞–π—Ç: https://example.com\n"
        "üì∏ Instagram: https://instagram.com/example"
    )

# ==== –ù–ï–í–Ü–î–û–ú–ê –ö–û–ú–ê–ù–î–ê ====
async def unknown(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤ –∫–æ–º–∞–Ω–¥—É. –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –º–µ–Ω—é üëá")

# ==== –ó–ê–ü–£–°–ö ====
def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # --- –ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é
    consult_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex(".*–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.*"), consult_start)],
        states={
            CONSULT_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, consult_name)],
            CONSULT_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, consult_phone)],
        },
        fallbacks=[]
    )

    # --- –ó–∞—è–≤–∫–∞ –Ω–∞ –¢–∞—É–Ω—Ö–∞—É—Å
    buy_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex(".*–¢–∞—É–Ω—Ö–∞—É—Å–∞.*"), buy_start)],
        states={
            BUY_AREA: [MessageHandler(filters.TEXT & ~filters.COMMAND, buy_area)],
            BUY_REGION: [MessageHandler(filters.TEXT & ~filters.COMMAND, buy_region)],
            BUY_BUDGET: [MessageHandler(filters.TEXT & ~filters.COMMAND, buy_budget)],
        },
        fallbacks=[]
    )

    # --- –ú–µ–Ω—é
    app.add_handler(CommandHandler("start", start))
    app.add_handler(consult_conv)
    app.add_handler(buy_conv)
    app.add_handler(MessageHandler(filters.Regex(".*–≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—é.*"), send_visual))
    app.add_handler(MessageHandler(filters.Regex(".*–∫–∞–Ω–∞–ª.*"), go_to_channel))
    app.add_handler(MessageHandler(filters.Regex(".*–∫–æ–º–ø–∞–Ω—ñ—é.*"), about_company))
    app.add_handler(MessageHandler(filters.TEXT, unknown))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π!")
    app.run_polling()

if __name__ == "__main__":
    main()
